import numpy as np
import magpylib as magpy
from magnetic_plotting import plot_magnetic_fields  # Importiere die Funktion

##Variablen/Konstanten
versatz_x = 0
num_measurements = 61  # Anzahl der Messpunkte
angles = np.linspace(0, 360, num_measurements)  # Rotationswinkel des Magneten über x Messpunkte

# Create magnet
magnet = magpy.magnet.Cylinder(
    polarization=(1000, 0, 0),
    dimension=(6, 2),
    position=(0, 0, 1.5),
    style_label="Magnet",
    style_color=".7",
)

# Create shaft dummy with 3D model
shaft = magpy.misc.CustomSource(
    position=(0, 0, 7),
    style_color=".7",
    style_model3d_showdefault=False,
    style_label="Shaft",
)
shaft_trace = magpy.graphics.model3d.make_Prism(
    base=20,
    diameter=1,
    height=1,
    opacity=0.3,
)
shaft.style.model3d.add_trace(shaft_trace)

# Shaft rotation / magnet wobble motion
displacement = 0
coll = magnet + shaft
magnet.move((displacement, 0, 0))
coll.rotate_from_angax(angles, "z", anchor=0, start=0)

# Create sensor
sens = magpy.Sensor(
    position=(0, 0, 0),
    pixel=[(-0.25, 0, 0), (0.25, 0, 0)],
    style_pixel_size=0,
    style_size=0,
)

############################################
####        Magnetsimulation            ####
############################################

# Magnetfeldwerte direkt als NumPy-Array abrufen
B_array = sens.getB(magnet, output="ndarray")

# Extrahiere die Magnetfeldkomponenten für Pixel 0 und Pixel 1:
Bx0 = B_array[:, 0, 0]  # Bx für Pixel 0
By0 = B_array[:, 0, 1]  # By für Pixel 0
Bz0 = B_array[:, 0, 2]  # Bz für Pixel 0

Bx1 = B_array[:, 1, 0][::-1]  # Bx für Pixel 1 invertiert
By1 = B_array[:, 1, 1][::-1]  # By für Pixel 1 invertiert
Bz1 = B_array[:, 1, 2][::-1]  # Bz für Pixel 1 invertiert

# Berechnen von Bxy / Bnorm
Bxy0 = np.sqrt(Bx0**2 + By0**2)
Bxy1 = np.sqrt(Bx1**2 + By1**2)

# Berechnen des Winkels
angle0 = np.arctan2(By0, Bx0) * 180 / np.pi + 180
angle1 = np.arctan2(By1, Bx1) * 180 / np.pi + 180

# Berechnen des Fehlers
error0 = angle0 - angles;
error1 = angle1 - angles[::-1];


plot_magnetic_fields(angles, Bx0, By0, Bz0, Bxy0, Bx1, By1, Bxy1, Bz1, angle0, angle1, error0, error1)
